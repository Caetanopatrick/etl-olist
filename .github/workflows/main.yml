name: build-and-deploy

# Controla quanda a ação será executada. Da trigger no workflow na hora od push, mas só para o branch master.

on:
  push:
    branches: [ master ]

# Uma run de workflow é feita de um ou mais jobs que podem rodar sequencialmente ou em paralelo.
jobs:
  # Esse workflow contem o build e o deploy.
  build:
    # Onde o job vai rodar
    runs-on: ubuntu-latest

    # As etapas representam uma sequência de tarefas que serão executadas como parte do job
    steps:
      # Verifica o repositório em $ GITHUB_WORKSPACE, para que o job possa acessá-lo
      - uses: actions/checkout@v2

      # Ativa o Python
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'


      # Persiste o script python para usar entre os jobs.
      - name: Upload python script
        uses: actions/upload-artifact@v2
        with:
          name: script_csv_to_parquet.py
          path: etl/script_csv_to_parquet.py

  # Da upload do script python no s3 e atualiza o glue job.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download python script from build
        uses: actions/download-artifact@v2
        with:
          name: script_csv_to_parquet.py

      # Instala a AWS CLI
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      # Configura as credenciais da AWS
      - name: Set up AWS credentials
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          mkdir -p ~/.aws
          touch ~/.aws/credentials
          echo "[default]
          aws_access_key_id = $AWS_ACCESS_KEY_ID
          aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials

      # Copia o arquivo para o bucket do s3
      - name: Upload to S3
        run: aws s3 cp script_csv_to_parquet.py s3://${{secrets.S3_BUCKET}}/root/csv_to_parquet --region us-east-1

      # Atualiza o glue job para rodar o novo script
      - name: Update Glue job
        run: |
          aws glue update-job --job-name "ETLCsvToParquet" --job-update \
            "Role=MyDefaultGlueServiceRole,Command={Name=glueetl,ScriptLocation=s3://${{secrets.S3_BUCKET}}/root/csv_to_parquet}" \
            --region us-east-1

      # Remove o arquivo de credenciais
      - name: Cleanup
        run: rm -rf ~/.aws